---
# https://pre-commit.com/#installation
default_stages: [pre-commit, pre-push]
default_language_version:
  # force all unspecified Python hooks to run python3
  python: python3
minimum_pre_commit_version: '2.18.1'
repos:
  - repo: meta
    hooks:
      - id: identity
      - id: check-hooks-apply
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      #- id: check-added-large-files
      - id: check-case-conflict
      #- id: check-executables-have-shebangs
      - id: check-merge-conflict
      - id: check-shebang-scripts-are-executable
      - id: check-toml
      - id: check-vcs-permalinks
      - id: check-yaml
      - id: destroyed-symlinks
      - id: detect-aws-credentials
        args: [--allow-missing-credentials]
      - id: detect-private-key
      - id: end-of-file-fixer
      - id: fix-byte-order-marker
      - id: forbid-submodules
      - id: mixed-line-ending
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.45.0
    hooks:
      - id: markdownlint
        name: run markdownlint
        description: Check Markdown files with markdownlint
        args: [--config=.github/linters/.markdown-lint.yml]
        types: [markdown]
        files: \.md$
  - repo: local
    hooks:
      - id: bun-audit
        name: Bun Security Audit
        entry: bun audit
        language: system
        description: Run security audit to check for vulnerabilities in dependencies
        pass_filenames: false
        stages: [pre-commit]
      - id: npm-audit-fallback
        name: NPM Security Audit (Fallback)
        entry: bash -c 'if ! command -v bun &> /dev/null; then npm audit --audit-level=moderate; else echo "Using Bun audit instead"; fi'
        language: system
        description: Run NPM security audit as fallback if Bun is not available
        pass_filenames: false
        stages: [pre-commit]
